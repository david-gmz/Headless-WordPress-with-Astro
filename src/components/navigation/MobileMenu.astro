---
import NavLinks from "./NavLinks.astro";
---

<div class="mobile-menu">
    <button
        id="mobile-menu-button"
        class="p-2 hover:bg-accent rounded-md"
        aria-label="Toggle menu">
        <svg
            id="menu-icon"
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24">
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg
            id="close-icon"
            class="hidden w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24">
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"></path>
        </svg>
    </button>

    <div
        id="mobile-menu-panel"
        class="fixed inset-y-0 right-0 w-64 bg-background border-l transform translate-x-full transition-transform duration-200 ease-in-out">
        <div class="p-6 space-y-6">
            <nav class="space-y-4">
                <NavLinks />
            </nav>
        </div>
    </div>
</div>
<script>
    // Global state for the menu
    let isOpen = false;
    let cleanup: (() => void) | null = null;
    function setupMobileMenu() {
        console.log("Setting up mobile menu...");
        const button = document.getElementById("mobile-menu-button");
        const panel = document.getElementById("mobile-menu-panel");
        const menuIcon = document.getElementById("menu-icon");
        const closeIcon = document.getElementById("close-icon");

        console.log("Button: ", button);
        console.log("Panel: ", panel);
        console.log("Menu Icon: ", menuIcon);
        console.log("Close Icon: ", closeIcon);

        if (!button || !panel || !menuIcon || !closeIcon) {
            console.error("Missing elements for mobile menu!");
            return null;
        }
        // Function to update the menu state
        function updateMenuState() {
            if (isOpen) {
                panel?.classList.remove("translate-x-full");
                menuIcon?.classList.add("hidden");
                closeIcon?.classList.remove("hidden");
                document.body.classList.add("menu-open");
                console.log("Panel should be visible:", panel);
            } else {
                panel?.classList.add("translate-x-full");
                menuIcon?.classList.remove("hidden");
                closeIcon?.classList.add("hidden");
                document.body.classList.remove("menu-open");
                console.log("Panel should be hidden:", panel);
            }
        }

        // Function to toggle the menu state
        function toggleMenu() {
            console.log("Toggling menu");
            isOpen = !isOpen;
            updateMenuState();
        }

        // Function to close the menu if clicked outside
        function handleClickOutside(e: MouseEvent) {
            if (
                isOpen &&
                !panel?.contains(e.target as Node) &&
                !button?.contains(e.target as Node)
            ) {
                console.log("Clicking outside the menu");
                isOpen = false;
                updateMenuState();
            }
        }

        // Add event listeners
        button.addEventListener("click", toggleMenu);
        document.addEventListener("click", handleClickOutside);

        // Clean up function
        return () => {
            button.removeEventListener("click", toggleMenu);
            document.removeEventListener("click", handleClickOutside);
            console.log("Event listeners removed");
        };
    }

    // Initial setup
    document.addEventListener("DOMContentLoaded", () => {
        console.log("DOMContentLoaded: Setting up mobile menu");
        cleanup = setupMobileMenu();
    });

    // Re-initialize after page load (including transitions)
    document.addEventListener("astro:after-swap", () => {
        console.log("astro:after-swap: Reinitializing mobile menu");
        if (cleanup) cleanup(); // Clean up old listeners
        cleanup = setupMobileMenu(); // Reinitialize
    });
</script>
<style>
    /* Prevent body scroll when menu is open */
    :global(body.menu-open) {
        overflow: hidden;
    }
</style>
