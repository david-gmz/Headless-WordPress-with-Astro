---
interface Props {
    variant?: "primary" | "secondary" | "ghost" | "icon";
    size?: "sm" | "md" | "lg";
    class?: string;
    href?: string;
}

const {
    variant = "primary",
    size = "md",
    class: className,
    href
} = Astro.props;

const baseStyles =
    "inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50";

const variants = {
    primary: "bg-primary text-primary-foreground hover:bg-primary/90",
    secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
    ghost: "hover:bg-accent hover:text-accent-foreground",
    icon: "h-10 w-10 p-0 hover:bg-accent hover:text-accent-foreground"
};

const sizes = {
    sm: "h-9 px-3 text-sm",
    md: "h-10 px-4 py-2",
    lg: "h-11 px-8 text-lg"
};

const classes = [
    baseStyles,
    variants[variant],
    variant !== "icon" ? sizes[size] : ""
].join(" ");

const Element = href ? "a" : "button";
---

<Element href={href} class:list={[classes, className]}>
    <slot />
</Element>
